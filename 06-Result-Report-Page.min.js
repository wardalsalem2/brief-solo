document
  .getElementById("burger-menu-btn")
  .addEventListener("click", function () {
    document.getElementById("sidebar").classList.toggle("active");
  });

window.addEventListener("click", function (event) {
  const sidebar = document.getElementById("sidebar");
  const burgerMenuBtn = document.getElementById("burger-menu-btn");
  if (
    !sidebar.contains(event.target) &&
    !burgerMenuBtn.contains(event.target)
  ) {
    sidebar.classList.remove("active");
  }
});

window.addEventListener("scroll", function () {
  const navbar = document.querySelector("header");
  navbar.classList.toggle("sticky", window.scrollY > 0);
});

document.querySelectorAll("#username, #profile-photo").forEach((element) => {
  element.addEventListener("click", function () {
    const dropdownMenu = document.getElementById("dropdown-menu");
    dropdownMenu.style.display =
      dropdownMenu.style.display === "none" ? "block" : "none";
  });
});

window.addEventListener("click", function (event) {
  const dropdownMenu = document.getElementById("dropdown-menu");
  const username = document.getElementById("username");
  const profilePhoto = document.getElementById("profile-photo");
  if (
    !dropdownMenu.contains(event.target) &&
    !username.contains(event.target) &&
    !profilePhoto.contains(event.target)
  ) {
    dropdownMenu.style.display = "none";
  }
});

const userSession = JSON.parse(sessionStorage.getItem("userSession") || "{}");
const loggedIn = userSession.loggedIn || false;

if (!loggedIn) {
  alert("Unauthorized access detected. You have been banned permanently.");
  localStorage.setItem("banned", "true");
  window.location.href = "01-Welcome-Page.html";
}

const username =
  userSession.username.charAt(0).toUpperCase() + userSession.username.slice(1);
document.querySelectorAll("#username").forEach((element) => {
  element.textContent = username;
});

const userAnswers = userSession.userAnswers;
const totalQuestions = userAnswers.length;
const correctAnswers = userAnswers.filter(
  (answer) => answer.userCorrect
).length;
const totalScore = `${correctAnswers}/${totalQuestions}`;
const percentage = Math.round((correctAnswers / totalQuestions) * 100);
const totalTime = userAnswers.reduce((acc, answer) => acc + answer.timeTook, 0);
const minutes = Math.floor(totalTime / 60);
const seconds = Math.floor(totalTime % 60);
const formattedTime = `${minutes}:${seconds < 10 ? "0" : ""}${seconds}`;

document.getElementById(
  "total-score"
).textContent = `${totalScore} in ${formattedTime}`;
document.querySelector(".percentage").textContent = `${percentage}%`;
document
  .querySelector(".circular-progress")
  .setAttribute("data-percentage", percentage);

if (percentage >= 50) {
  document.querySelector("#msg-1").textContent = "Congratulations!";
  document.querySelector("#msg-2").innerHTML =
    "You’ve Successfully <b>Passed</b> the Quiz!";
  document.querySelector(".result-container").style.backgroundColor =
    "var(--light-green)";
} else {
  document.querySelector("#msg-1").innerHTML = "You <b>Failed</b> This Time!";
  document.querySelector("#msg-2").textContent =
    "Don’t Give Up – You’re Learning!";
  document.querySelector(".result-container").style.backgroundColor =
    "var(--light-red)";
}

document
  .getElementById("view-answers-btn")
  .addEventListener("click", function () {
    window.location.href = "07-Result-Check-Answers-Page.html";
  });

document.getElementById("new-quiz-btn").addEventListener("click", function () {
  window.location.href = "04-Quiz-Select-Topic.html";
});

document.getElementById("logout-link").addEventListener("click", function () {
  sessionStorage.removeItem("userSession");
  sessionStorage.removeItem("loggedIn");
  sessionStorage.removeItem("fromWelcomePage");
  sessionStorage.removeItem("fromSignupPage");
  window.location.href = "01-Welcome-Page.html";
});

// Animation for circular progress bar
const circularProgress = document.querySelector(".circular-progress");
const progressValue = circularProgress.querySelector(".percentage");
const innerCircle = circularProgress.querySelector(".inner-circle");
let startValue = 0;
const endValue = Number(circularProgress.getAttribute("data-percentage"));
const speed = 50;

const progress = setInterval(() => {
  if (startValue >= endValue) {
    clearInterval(progress);
  } else {
    startValue++;
    progressValue.textContent = `${startValue}%`;

    const progressColor =
      endValue === 0 ? "red" : `rgb(${255 - startValue * 2.55}, ${startValue * 2.55}, 0)`;
    progressValue.style.color = `${progressColor}`;

    innerCircle.style.backgroundColor = `${circularProgress.getAttribute(
      "data-inner-circle-color"
    )}`;

    circularProgress.style.background = `conic-gradient(${progressColor} ${
      startValue * 3.6
    }deg, ${circularProgress.getAttribute("data-bg-color")} 0deg)`;
  }
}, speed);
