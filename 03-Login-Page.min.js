document.getElementById("signup-btn").addEventListener("click", function () {
  window.location.href = "02-Signup-Page.html";
});

document
  .getElementById("burger-menu-btn")
  .addEventListener("click", function () {
    document.getElementById("sidebar").classList.toggle("active");
  });

window.addEventListener("click", function (event) {
  const sidebar = document.getElementById("sidebar");
  const burgerMenuBtn = document.getElementById("burger-menu-btn");
  if (
    !sidebar.contains(event.target) &&
    !burgerMenuBtn.contains(event.target)
  ) {
    sidebar.classList.remove("active");
  }
});

window.addEventListener("scroll", function () {
  const navbar = document.querySelector("header");
  navbar.classList.toggle("sticky", window.scrollY > 0);
});

const emailInput = document.getElementById("email");
const passwordInput = document.getElementById("password");
const loginBtn = document.getElementById("login-btn");

const emailValidation = document.getElementById("email-validation");
const formValidationMessage = document.createElement("small");
formValidationMessage.classList.add("validation-message");
formValidationMessage.style.textAlign = "center";
formValidationMessage.style.display = "block";
loginBtn.parentNode.insertBefore(formValidationMessage, loginBtn);

let emailTouched = false;
let passwordTouched = false;

emailInput.addEventListener("blur", () => {
  emailTouched = true;
  validateForm();
});

emailInput.addEventListener("input", validateForm);

passwordInput.addEventListener("blur", () => {
  passwordTouched = true;
  validateForm();
});

passwordInput.addEventListener("input", validateForm);

function validateForm() {
  const email = emailInput.value;
  const password = passwordInput.value;

  const emailValid = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
  const passwordValid =
    /^(?=.*[A-Za-z])(?=.*\d)(?=.*[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?])[A-Za-z\d!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]{8,}$/.test(
      password
    );

  if (emailTouched && email) {
    emailValidation.textContent = emailValid
      ? ""
      : "Please enter a valid email address.";
  }

  const allFieldsFilled = email && password;
  formValidationMessage.textContent =
    (emailTouched && !email) || (passwordTouched && !password)
      ? "Please fill out all fields."
      : "";
  loginBtn.disabled = !(emailValid && passwordValid && allFieldsFilled);
  loginBtn.style.backgroundColor = loginBtn.disabled
    ? "gray"
    : "var(--primary-color)";
}

document
  .getElementById("login-form")
  .addEventListener("submit", function (event) {
    event.preventDefault();

    const email = emailInput.value;
    const password = passwordInput.value;

    if (!email || !password) {
      if (!email) {
        emailValidation.textContent = "Email is required.";
        emailValidation.style.color = "var(--error-color)";
        emailInput.style.borderColor = "var(--error-color)";
        emailInput.focus();
      }
      if (!password) {
        passwordValidation.textContent = "Password is required.";
        passwordValidation.style.color = "var(--error-color)";
        passwordInput.style.borderColor = "var(--error-color)";
        passwordInput.focus();
      }
      return;
    }

    const loginAttempts =
      JSON.parse(localStorage.getItem("loginAttempts")) || {};
    const currentTime = new Date().getTime();

    if (
      loginAttempts[email] &&
      loginAttempts[email].attempts >= 3 &&
      currentTime < loginAttempts[email].blockUntil
    ) {
      alert("Too many failed login attempts. Please try again later.");
      return;
    }

    const existingEmail = Object.keys(localStorage).find(
      (key) => JSON.parse(localStorage.getItem(key)).email === email
    );

    if (!existingEmail) {
      alert(
        "The email address you entered was not found. Please sign up for an account."
      );
      trackLoginAttempt(email);
    } else {
      const userData = JSON.parse(localStorage.getItem(existingEmail));
      if (userData.password !== password) {
        alert(
          "The email or password you entered is incorrect. Please try again."
        );
        trackLoginAttempt(email);
      } else {
        sessionStorage.setItem(
          "userSession",
          JSON.stringify({
            userID: userData.userID,
            username: userData.username,
            email: userData.email,
            loggedIn: true,
            loginTime: new Date().toISOString(),
          })
        );
        alert("You've successfully logged in!");
        setTimeout(() => {
          window.location.href = "04-Quiz-Select-Topic.html";
        }, 500);
      }
    }
  });

function trackLoginAttempt(email) {
  const loginAttempts = JSON.parse(localStorage.getItem("loginAttempts")) || {};
  const currentTime = new Date().getTime();

  if (!loginAttempts[email]) {
    loginAttempts[email] = { attempts: 1, blockUntil: 0 };
  } else {
    loginAttempts[email].attempts += 1;
    if (loginAttempts[email].attempts >= 3) {
      loginAttempts[email].blockUntil = currentTime + 30 * 60 * 1000; // Block for 30 minutes
    }
  }

  localStorage.setItem("loginAttempts", JSON.stringify(loginAttempts));
}

const userSession = JSON.parse(sessionStorage.getItem("userSession") || "{}");
const loggedIn = userSession.loggedIn || false;

if (loggedIn) {
  sessionStorage.setItem("loggedIn", "true");
  alert("You are already logged in.");
  document.body.innerHTML = "";
  window.location.href = "04-Quiz-Select-Topic.html";
}

if (window.location.search || localStorage.getItem("banned") === "true") {
  alert("Unauthorized access detected.");
  document.body.innerHTML = "";
  window.location.href = "01-Welcome-Page.html";
}

checkSession();
setInterval(validateForm, 500);
